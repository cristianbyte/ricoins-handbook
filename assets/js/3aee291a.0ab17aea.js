"use strict";(self.webpackChunkricoins_handbook=self.webpackChunkricoins_handbook||[]).push([[6636],{5611:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var i=s(4848),t=s(8453);const o={sidebar_position:1},l="Getting and Filtering Clans",r={id:"clan/get",title:"Getting and Filtering Clans",description:"These endpoints allow you to retrieve clans from the gamification API, with support for pagination and optional filtering by cohort and sorting by coins.",source:"@site/docs/clan/get.md",sourceDirName:"clan",slug:"/clan/get",permalink:"/ricoins-handbook/docs/clan/get",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/clan/get.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Clans API Documentation",permalink:"/ricoins-handbook/docs/category/clans-api-documentation"},next:{title:"Creating New Clans",permalink:"/ricoins-handbook/docs/clan/post"}},c={},a=[{value:"Get List of Clans",id:"get-list-of-clans",level:4},{value:"Get Clan by ID",id:"get-clan-by-id",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"getting-and-filtering-clans",children:"Getting and Filtering Clans"}),"\n",(0,i.jsx)(e.p,{children:"These endpoints allow you to retrieve clans from the gamification API, with support for pagination and optional filtering by cohort and sorting by coins."}),"\n",(0,i.jsx)(e.h4,{id:"get-list-of-clans",children:"Get List of Clans"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Endpoint"}),": ",(0,i.jsx)(e.code,{children:"http://localhost:8080/api/v1/ricoin/clans"})]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Method"}),": GET"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Retrieves a paginated list of clans."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"page"})," (optional, default = 1): Page number."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"size"})," (optional, default = 10): Number of items per page."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"sortType"})," (optional, default = NONE): Sorting type for the ",(0,i.jsx)(e.code,{children:"coins"})," attribute. Values can be: ",(0,i.jsx)(e.code,{children:"NONE"}),", ",(0,i.jsx)(e.code,{children:"ASC"}),", and ",(0,i.jsx)(e.code,{children:"DESC"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"cohort"})," (optional): Integer representing the cohort of the clan."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Example Request"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-http",children:"http://localhost:8080/api/v1/ricoin/clans?page=1&size=10&sortType=NONE&cohort=2\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Example Response"})," (Status: 200 OK):"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n  "content": [\n    {\n      "id": 1,\n      "name": "Meta",\n      "cohort": "1",\n      "urlImage": "https://image.riwi.io/metaLogo.png",\n      "coins": 10\n    },\n    {\n      "id": 2,\n      "name": "Van Rossum",\n      "cohort": "1",\n      "urlImage": "https://image.riwi.io/varossumLogo.png",\n      "coins": 0\n    }\n  ],\n  "pageable": {\n    "pageNumber": 0,\n    "pageSize": 2,\n    "sort": {\n      "empty": true,\n      "sorted": false,\n      "unsorted": true\n    },\n    "offset": 0,\n    "paged": true,\n    "unpaged": false\n  },\n  "totalPages": 3,\n  "totalElements": 5,\n  "last": false,\n  "size": 2,\n  "number": 0,\n  "sort": {\n    "empty": true,\n    "sorted": false,\n    "unsorted": true\n  },\n  "first": true,\n  "numberOfElements": 2,\n  "empty": false\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Usability Notes"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"This endpoint is useful for retrieving an overview of all clans, with optional filtering by cohort."}),"\n",(0,i.jsx)(e.li,{children:"Pagination details are included in the response along with a list of clans, including their IDs, names, cohorts, image URLs, and coin counts."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"get-clan-by-id",children:"Get Clan by ID"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Endpoint"}),": ",(0,i.jsx)(e.code,{children:"http://localhost:8080/api/v1/ricoin/clans/{id}"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Method"}),": GET"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Retrieves a specific clan by its ID."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"{id}"}),": The unique identifier of the clan."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Example Request"}),":","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-http",children:"GET http://localhost:8080/api/v1/ricoin/clans/1\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Example Response"})," (Status: 200 OK):","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n  "id": 1,\n  "name": "Meta",\n  "cohort": "1",\n  "urlImage": "https://image.riwi.io/metaLogo.png",\n  "coins": 10\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Usability Notes"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"This endpoint allows you to retrieve a specific clan by providing its ID."}),"\n",(0,i.jsx)(e.li,{children:"The response includes details such as the clan's ID, name, cohort, image URL, and coin count."}),"\n",(0,i.jsx)(e.li,{children:"A status code of 200 indicates a successful request."}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>r});var i=s(6540);const t={},o=i.createContext(t);function l(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);